<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PHANES</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
    <!--For Routing-->
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>

    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style>
        .material-symbols-outlined {
          font-variation-settings:
          'FILL' 0,
          'wght' 400,
          'GRAD' 0,
          'opsz' 24
        }
    </style>
    <script>
document.addEventListener('DOMContentLoaded', function() {
    var upButton = document.getElementById('up');

    upButton.addEventListener('click', toggleHeight);

    function toggleHeight() {
        var map = document.getElementById('map');
        var botBar = document.getElementById('botBar');

        if (map.style.height === "60%") {
            map.style.height = "85%";
            botBar.style.height = "7.5%";
            upButton.innerHTML = "expand_less";
        } else {
            map.style.height = "60%";
            botBar.style.height = "32.5%";
            upButton.innerHTML = "expand_more";
        }
    }
});
    </script>
</head>
<body>
    <div class="topNav">
        <img id="image1" src="./phanesLogo.png" alt="PHANES">
    </div>
    <div id="map"></div>
    <div id="botBar" class="bottom">
        <div id="fLine">
            <button id="up" class="material-symbols-outlined expandLess" onclick=upArrow()>expand_less</button>
            <label id="location"></label><label id="text">is the nearest</label>
        </div>
        <div id="sLine">
            <label id="add"></label><br>
            <label id="phn"></label>
        </div>
    </div>
    <script>
        var x_co;
        var y_co;
        var x_f
        var y_f;
        function initMap() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    x_co = parseFloat(position.coords.latitude);
                    y_co = parseFloat(position.coords.longitude);
                    var map = L.map('map').setView([x_co, y_co], 100);

                    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        maxZoom: 19,
                        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                    }).addTo(map);
                    var marker = L.marker([x_co, y_co]).addTo(map);

                    const userLocation = {
                        lat: position.coords.latitude,
                        lon: position.coords.longitude
                    };
                    const overpassUrl = `https://overpass-api.de/api/interpreter?data=[out:json];(node["amenity"="hospital"](around:1000,${userLocation.lat},${userLocation.lon});way["amenity"="hospital"](around:1000,${userLocation.lat},${userLocation.lon});relation["amenity"="hospital"](around:1000,${userLocation.lat},${userLocation.lon}););out;`;
                    fetch(overpassUrl)
                        .then(response => response.json())
                        .then(data => {
                        const nearestHospital = findNearestHospitalFromOverpass(data);
                        if (nearestHospital) {
                            document.getElementById('location').innerHTML = nearestHospital.tags.name;
                            var add = nearestHospital.tags["addr:full"]|| "Unknown";
                            var phone = nearestHospital.tags.phone || "Unknown";
                            document.getElementById('add').innerHTML = "Address: "+add;
                            document.getElementById('phn').innerHTML = "Phone number: "+phone;
                            x_f = parseFloat(nearestHospital.lat);
                            y_f = parseFloat(nearestHospital.lon);
                            var marker = L.marker([x_f, y_f],{
                                icon: L.icon({
                                    iconUrl: './locator.png',  // Specify the URL of your custom icon image
                                    iconSize: [32, 32],
                                    setAnchor: [0,0]
                                })
                            }).addTo(map);
                            L.Routing.control({
                            waypoints: [
                                L.latLng(x_co, y_co),
                                L.latLng(x_f, y_f)
                            ],
                            lineOptions: {
                                styles:[{color:'blue',fillOpacity:0.5, weight:8}]
                            }
                    }).addTo(map);

                        } else {
                            alert('No hospitals found nearby.');
                        }})
                        .catch(error => console.error('Error fetching data:', error));
                });


            }}


        function findNearestHospitalFromOverpass(data) {
            const hospitals = data.elements.filter(element => element.tags && element.tags.amenity === 'hospital');
            return hospitals.length > 0 ? hospitals[0] : null;}


        initMap()

    </script>
</body>
</html>